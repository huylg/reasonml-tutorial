// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");

function create(param) {
  return {
          expr: param[0],
          desc: param[1]
        };
}

function test(t) {
  return t.expr;
}

function lightRed(x) {
  return "\u001b[91m" + (String(x) + "\u001b[39m");
}

function lightGreen(x) {
  return "\u001b[92m" + (String(x) + "\u001b[39m");
}

function runAll(xs) {
  var toString = function (t) {
    return "Testing " + (t.desc + ("... " + (
                t.expr ? lightGreen("passed") : lightRed("failed")
              )));
  };
  var count = List.length(xs);
  var tests = List.map(create, xs);
  var failures = List.length(List.filter((function (y) {
                return !y;
              }))(List.map(test, tests)));
  var descriptions = List.map(toString, tests);
  console.log("");
  List.iteri((function (i, x) {
          console.log(String(i + 1 | 0) + (". " + x));
          
        }), descriptions);
  console.log("");
  if (failures === 0) {
    console.log(lightGreen("All tests passed!"));
  } else {
    console.log(lightRed(String(failures) + (" out of " + (String(count) + " tests failed."))));
  }
  console.log("");
  
}

exports.runAll = runAll;
/* No side effect */
