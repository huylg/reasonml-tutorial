// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Test$LearnReasonmlWorkshop = require("../../support/test.bs.js");

function add1(x) {
  return Pervasives.failwith("For you to implement");
}

function square(x) {
  return Pervasives.failwith("For you to implement");
}

function twice(f, x) {
  return Pervasives.failwith("For you to implement");
}

var add2 = Pervasives.failwith("For you to implement");

var raiseToTheFourth = Pervasives.failwith("For you to implement");

Test$LearnReasonmlWorkshop.runAll(/* :: */[
      /* tuple */[
        Pervasives.failwith("For you to implement") === 5,
        "add1"
      ],
      /* :: */[
        /* tuple */[
          Pervasives.failwith("For you to implement") === 16,
          "square"
        ],
        /* :: */[
          /* tuple */[
            Pervasives.failwith("For you to implement") === 16,
            "square"
          ],
          /* :: */[
            /* tuple */[
              Pervasives.failwith("For you to implement") === 5,
              "twice"
            ],
            /* :: */[
              /* tuple */[
                Curry._1(add2, 1335) === 1337,
                "add2"
              ],
              /* :: */[
                /* tuple */[
                  Curry._1(raiseToTheFourth, 1) === 1,
                  "raiseToTheFourth"
                ],
                /* :: */[
                  /* tuple */[
                    Curry._1(raiseToTheFourth, 10) === 10000,
                    "raiseToTheFourth"
                  ],
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

exports.add1 = add1;
exports.square = square;
exports.twice = twice;
exports.add2 = add2;
exports.raiseToTheFourth = raiseToTheFourth;
/* add2 Not a pure module */
