// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_primitive = require("bs-platform/lib/js/caml_primitive.js");
var Test$LearnReasonmlWorkshop = require("../../support/test.bs.js");

function largest(xs) {
  if (xs) {
    return Caml_primitive.caml_float_max(xs[0], largest(xs[1]));
  } else {
    return Pervasives.neg_infinity;
  }
}

function smallest(xs) {
  return Pervasives.failwith("For you to implement");
}

Test$LearnReasonmlWorkshop.runAll(/* :: */[
      /* tuple */[
        Pervasives.failwith("For you to implement") === Pervasives.infinity,
        "smallest"
      ],
      /* :: */[
        /* tuple */[
          Pervasives.failwith("For you to implement") === 55,
          "smallest"
        ],
        /* :: */[
          /* tuple */[
            Pervasives.failwith("For you to implement") === -5,
            "smallest"
          ],
          /* :: */[
            /* tuple */[
              Pervasives.failwith("For you to implement") === 1,
              "smallest"
            ],
            /* [] */0
          ]
        ]
      ]
    ]);

exports.largest = largest;
exports.smallest = smallest;
/*  Not a pure module */
