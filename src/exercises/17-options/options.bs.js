// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Test$LearnReasonmlWorkshop = require("../../support/test.bs.js");

function whatNumberAmIThinking(myNumber) {
  if (myNumber !== undefined) {
    return "My number is: " + String(myNumber);
  } else {
    return "I'm not thinking of any number!";
  }
}

if (whatNumberAmIThinking(undefined) !== "I'm not thinking of any number!") {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "options.re",
          25,
          0
        ]
      ];
}

if (whatNumberAmIThinking(7) !== "My number is: 7") {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "options.re",
          27,
          0
        ]
      ];
}

function safeDivide(dividend, divisor) {
  return Pervasives.failwith("For you to implement");
}

var match = Pervasives.failwith("For you to implement");

var match$1 = Pervasives.failwith("For you to implement");

Test$LearnReasonmlWorkshop.runAll(/* :: */[
      /* tuple */[
        match !== undefined ? match === 1 : false,
        "safe divide"
      ],
      /* :: */[
        /* tuple */[
          match$1 === undefined,
          "safe divide"
        ],
        /* [] */0
      ]
    ]);

exports.safeDivide = safeDivide;
/*  Not a pure module */
