// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function subtractOne(x) {
  return x - 1 | 0;
}

var Example = {
  theMeaningOfLifeTheUniverseAndEverything: 42,
  subtractOne: subtractOne
};

var oneLessThanTheMeaningOfLifeEtc = 41;

if (oneLessThanTheMeaningOfLifeEtc !== 41) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "readingSigs.re",
          26,
          0
        ]
      ];
}

function toInt(x) {
  return x;
}

function add(prim, prim$1) {
  return prim + prim$1 | 0;
}

var AbstractTypeExample = {
  toInt: toInt,
  zero: 0,
  one: 1,
  add: add
};

var two = 2;

var four = two + two | 0;

if (four !== 4) {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "readingSigs.re",
          56,
          0
        ]
      ];
}

var Fraction = { };

exports.Example = Example;
exports.oneLessThanTheMeaningOfLifeEtc = oneLessThanTheMeaningOfLifeEtc;
exports.AbstractTypeExample = AbstractTypeExample;
exports.two = two;
exports.four = four;
exports.Fraction = Fraction;
/*  Not a pure module */
